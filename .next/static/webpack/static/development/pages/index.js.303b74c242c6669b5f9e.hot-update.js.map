{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.303b74c242c6669b5f9e.hot-update.js","sources":["webpack:///./components/Banner_form/Banner_form.js"],"sourcesContent":["\r\n\r\n\r\n// onBlur={() => this.setState({ showSuggest: false })} \r\n\r\n\r\nimport SearchInput, {createFilter} from 'react-search-input';\r\nimport cx from 'classnames';\r\nimport \"./Banner_form.css\"\r\nimport SvgSearch from \"../Svg_search/Svg_search\"\r\nimport ReactDOM from \"react-dom\";\r\n\r\nclass Form  extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.submit=this.submit.bind(this);\r\n        // this.cityGet=this.cityGet.bind(this);\r\n        this.searchUpdated = this.searchUpdated.bind(this);\r\n        this.suggestedCittyBlock=React.createRef();\r\n        this.state={\r\n         city:\"\",\r\n         region:\"\",\r\n         allCityies:[],\r\n         searchTerm :'',\r\n         sugestionCity:'',\r\n         showSuggestCity: false,\r\n         showSuggestRegion: false,\r\n         allRegion:[]\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n      this.getCities();\r\n     \r\n    }\r\n   \r\n\r\n    getCities = async () => {\r\n        const respond =  await fetch('https://stage.reyhoon.com/public-api/v1/cities',{method:\"GET\"});\r\n        if (respond.ok) {\r\n            const data = await respond.json();\r\n            \r\n            this.setState({allCityies:data.cities})\r\n        }\r\n        else {\r\n            console.error(\"https_code\"+respond.status)\r\n        }\r\n       \r\n            \r\n    }\r\n\r\n    regionGet=(e)=>{\r\n        const regionTyped=e.target.value;\r\n        if (regionTyped.length>=4)\r\n        {\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    region:regionTyped\r\n                },async()=>{\r\n                        \r\n                           const respond= await fetch(`https://stage.reyhoon.com/location/query?query=${this.state.region}&city=${this.state.city}`)\r\n                            if (respond.ok){\r\n                                const data= await respond.json();\r\n                                if (data.suggestions.length>0){\r\n                                        this.setState({allRegion:data.suggestions,\r\n                                            showSuggestRegion:true\r\n                                        }\r\n                                     )\r\n                                }\r\n                             \r\n                            }\r\n                            else{\r\n                            console.error(\"https_code\"+respond.status)\r\n        \r\n                            }\r\n                       }\r\n                \r\n                )\r\n            }, 2000);\r\n        }\r\n    }\r\n    submit=(e)=>{\r\n        e.preventDefault(); \r\n        e.target.querySelector(\"input[id='txt1']\").value=this.state.city;\r\n        if((e.target.querySelector(\"input[id='txt1']\").value)&&(e.target.querySelector(\"input[id='txt2']\").value))\r\n        {}\r\n        else{\r\n            const node = ReactDOM.findDOMNode(this);\r\n               node.querySelector(\"div[id='nullInput']\").value=\"لطفا ورودی را وارد کنید\";\r\n\r\n        }\r\n    }\r\n    searchUpdated=(term)=>{\r\n        let temp=term.target.value;\r\n        if (temp.length>=2)\r\n        \r\n       this.setState({searchTerm:temp});        \r\n    };\r\n    citySuggestedShow=()=>{\r\n        this.setState({\r\n            showSuggestCity: true,\r\n        })\r\n        }\r\n    regionSuggestedShow=()=>{\r\n        if (this.state.showSuggestRegion)\r\n        this.setState({\r\n            showSuggestRegion: true,\r\n                 \r\n\r\n        })\r\n\r\n        }\r\n    setCity=(citySelected)=>{\r\n       const node = ReactDOM.findDOMNode(this);\r\n    //    document.querySelector(\"input[id='txt1']\").value=citySelected;\r\n       node.querySelector(\"input[id='txt2']\").focus();\r\n      this.setState({\r\n          city:citySelected,\r\n          showSuggestCity: false\r\n      })\r\n\r\n        }  \r\n   setRegion=(regionSelected)=>{\r\n    this.setState({\r\n        region:regionSelected,\r\n        showSuggestRegion: false\r\n    })\r\n   }\r\n    render(){\r\n      console.log(this.state.showSuggestRegion)\r\n          const filteredCities =this.state.allCityies.filter(createFilter(this.state.searchTerm,'name'));\r\n        //  console.log(filteredCities);\r\n       return(   \r\n            <section  style={{marginBottom: '30px', marginTop:\"45px !important\"}} className=\"header-form-section margin-v-60\" >\r\n                    <p>برای دیدن لیست رستوران‌ها و فست‌فود‌هایی که به شما سرویس می‌دهند، منطقه خود را وارد کنید.</p>\r\n                    <form onSubmit={this.submit}  className=\"header-form\">\r\n                        <input  \r\n                        value={this.state.city}\r\n                            id=\"txt1\"\r\n                            type=\"text\" \r\n                            onFocus={()=>this.citySuggestedShow()}  \r\n                            onChange={(e)=>this.searchUpdated(e)} \r\n                            placeholder=\"انتخاب کنید\"\r\n                            autoComplete=\"off\" \r\n                        />\r\n                           \r\n                         \r\n                         <ul className={cx('citySuggested', {'showCitySuggested': this.state.showSuggestCity})}>\r\n                             <p>( {this.state.allCityies.length}) تحت پوشش</p>\r\n                              {filteredCities.map((city, key)=><li onClick={()=>this.setCity(city.name)}  key={key}>{city.name}</li>)}\r\n                         </ul>  \r\n                        <div className=\"child-2\">\r\n                            <span className=\"child-2-icon\">&copy;</span>\r\n                            <input className=\"child-2-input\"  autoComplete=\"off\"  type=\"text\" id=\"txt2\"   onChange={()=>{ this.regionSuggestedShow();console.log(\"jjjjjjjjjj\")}}  onChange={this.regionGet} placeholder=\"مثلا نیاوران\"/>\r\n                        </div>\r\n                        <ul className={cx('regionSuggested', {'showRegionSuggested': this.state.showSuggestRegion})} >\r\n                                {   \r\n                                     this.state.allRegion.map((regionSuggested, key)=><li key={key}  onClick={()=>this.setRegion(regionSuggested.value)}>{regionSuggested.value}</li>)\r\n                                }\r\n                        </ul>\r\n                        <button className=\"child-3\" type=\"submit\">\r\n                            <SvgSearch/>\r\n                        </button>\r\n                        \r\n                    </form>\r\n                    <div id=\"nullInput\">\r\n                        {this.state.city} . { this.state.region}\r\n                    </div>\r\n\r\n                </section>\r\n           \r\n        )\r\n    }\r\n}\r\nexport default Form;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// onBlur={() => this.setState({ showSuggest: false })} \r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAwBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AANA;AAAA;AACA;AADA;AAQA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAzBA;AAuCA;AACA;AAAA;AAEA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAXA;AAAA;AACA;AADA;AAcA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AACA;AACA;AACA;AApEA;AAqEA;AACA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AA/EA;AAgFA;AACA;AAEA;AAAA;AACA;AACA;AArFA;AAsFA;AACA;AADA;AAGA;AACA;AA1FA;AA2FA;AAEA;AADA;AAMA;AACA;AAnGA;AAoGA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAKA;AACA;AA7GA;AA8GA;AACA;AACA;AAFA;AAIA;AACA;AAjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AANA;AAgBA;AACA;;;;;;;;;;;AAEA;AACA;;;;;;;;;;;;;;;;;AA+FA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AAhKA;AACA;AAiKA;;;;A","sourceRoot":""}