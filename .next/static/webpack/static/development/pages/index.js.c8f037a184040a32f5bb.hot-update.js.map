{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.c8f037a184040a32f5bb.hot-update.js","sources":["webpack:///./components/Banner_form/Banner_form.js"],"sourcesContent":["\r\n\r\n\r\n// onBlur={() => this.setState({ showSuggest: false })} \r\n\r\n\r\nimport SearchInput, {createFilter} from 'react-search-input';\r\nimport cx from 'classnames';\r\nimport \"./Banner_form.css\"\r\nimport SvgSearch from \"../Svg_search/Svg_search\"\r\nimport ReactDOM from \"react-dom\";\r\n\r\nclass Form  extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.submit=this.submit.bind(this);\r\n        // this.cityGet=this.cityGet.bind(this);\r\n        this.searchUpdated = this.searchUpdated.bind(this);\r\n        this.suggestedCittyBlock=React.createRef();\r\n        this.state={\r\n         city:\"\",\r\n         region:\"\",\r\n         allCityies:[],\r\n         searchTerm :'',\r\n         sugestionCity:'',\r\n         showSuggest: false,\r\n         allRegion:[]\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n      this.getCities();\r\n     \r\n    }\r\n   \r\n\r\n    getCities = async () => {\r\n        const respond =  await fetch('https://stage.reyhoon.com/public-api/v1/cities',{method:\"GET\"});\r\n        if (respond.ok) {\r\n            const data = await respond.json();\r\n            \r\n            this.setState({allCityies:data.cities})\r\n        }\r\n        else {\r\n            console.error(\"https_code\"+respond.status)\r\n        }\r\n       \r\n            \r\n    }\r\n\r\n    regionGet=(e)=>{\r\n        const regionTyped=e.target.value;\r\n        if (regionTyped.length>=4)\r\n         this.setState({\r\n            region:regionTyped\r\n        },async()=>{\r\n                \r\n                   const respond= await fetch(`https://stage.reyhoon.com/location/query?query=${this.state.region}&city=${this.state.city}`)\r\n                    if (respond.ok){\r\n                        const data= await respond.json();\r\n                        this.setState({allRegion:data.suggestions})\r\n                       \r\n                        console.log(data.suggestions)\r\n                   \r\n                    }\r\n                    else{\r\n                    console.error(\"https_code\"+respond.status)\r\n\r\n                    }\r\n               }\r\n        \r\n        )\r\n    }\r\n    submit=(e)=>{\r\n        e.preventDefault(); \r\n        e.target.querySelector(\"input[id='txt1']\").value=this.state.city;\r\n      ((e.target.querySelector(\"input[id='txt1']\").value)&&(e.target.querySelector(\"input[id='txt2']\").value))\r\n        ? this.setState({\r\n            \r\n            region:e.target.querySelector(\"input[id='txt2']\").value\r\n        })\r\n        : \r\n        this.setState({\r\n            city:\"هر دو ورودی را کامل کنید\",\r\n            region:\"\" \r\n        })\r\n    }\r\n    searchUpdated=(term)=>{\r\n        let temp=term.target.value;\r\n        if (temp.length>=2)\r\n        \r\n       this.setState({searchTerm:temp});        \r\n    };\r\n    citySuggestedShow=()=>{\r\n        this.setState({\r\n            showSuggest: true,\r\n        })\r\n        }\r\n    setCity=(citySelected)=>{\r\n       const node = ReactDOM.findDOMNode(this);\r\n    //    document.querySelector(\"input[id='txt1']\").value=citySelected;\r\n       node.querySelector(\"input[id='txt2']\").focus();\r\n      this.setState({\r\n          city:citySelected,\r\n          showSuggest: false\r\n      })\r\n\r\n        }    \r\n    render(){\r\n      \r\n          const filteredCities =this.state.allCityies.filter(createFilter(this.state.searchTerm,'name'));\r\n        //  console.log(filteredCities);\r\n       return(   \r\n            <section  style={{marginBottom: '30px', marginTop:\"45px !important\"}} className=\"header-form-section margin-v-60\" >\r\n                    <p>برای دیدن لیست رستوران‌ها و فست‌فود‌هایی که به شما سرویس می‌دهند، منطقه خود را وارد کنید.</p>\r\n                    <form onSubmit={this.submit}  className=\"header-form\">\r\n                        <input  \r\n                        value={this.state.city}\r\n                            id=\"txt1\"\r\n                            type=\"text\" \r\n                            onFocus={()=>this.citySuggestedShow()}  \r\n                            onChange={(e)=>this.searchUpdated(e)} \r\n                            placeholder=\"انتخاب کنید\"\r\n                            autoComplete=\"off\" \r\n                        />\r\n                           \r\n                         \r\n                         <ul className={cx('citySuggested', {'showCitySuggested': this.state.showSuggest})}>\r\n                             <p>( {this.state.allCityies.length}) تحت پوشش</p>\r\n                              {filteredCities.map((city, key)=><li onClick={()=>this.setCity(city.name)}  key={key}>{city.name}</li>)}\r\n                         </ul>  \r\n                        <div className=\"child-2\">\r\n                            <span className=\"child-2-icon\">&copy;</span>\r\n                            <input className=\"child-2-input\" type=\"text\" id=\"txt2\" onChange={this.regionGet} placeholder=\"مثلا نیاوران\"/>\r\n                        </div>\r\n                        <ul className={cx('regionSuggested', {'showRegionSuggested': this.state.showSuggest})} >\r\n                                {this.state.allRegion.map((regionSuggested, key)=><li key={key} >{regionSuggested.value}</li>)}\r\n                        </ul>\r\n                        <button className=\"child-3\" type=\"submit\">\r\n                            <SvgSearch/>\r\n                        </button>\r\n                        \r\n                    </form>\r\n                    <div >\r\n                        {this.state.city} . { this.state.region}\r\n                    </div>\r\n\r\n                </section>\r\n           \r\n        )\r\n    }\r\n}\r\nexport default Form;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// onBlur={() => this.setState({ showSuggest: false })} \r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AANA;AAAA;AACA;AADA;AAQA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAxBA;AAsCA;AACA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAPA;AAAA;AACA;AADA;AAWA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AACA;AA5DA;AA6DA;AACA;AACA;AAGA;AAFA;AAMA;AACA;AAFA;AAIA;AACA;AA1EA;AA2EA;AACA;AAEA;AAAA;AACA;AACA;AAhFA;AAiFA;AACA;AADA;AAGA;AACA;AArFA;AAsFA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAKA;AACA;AA7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AANA;AAeA;AACA;;;;;;;;;;;AAEA;AACA;;;;;;;;;;;;;;;;;AA4EA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AA1IA;AACA;AA2IA;;;;A","sourceRoot":""}