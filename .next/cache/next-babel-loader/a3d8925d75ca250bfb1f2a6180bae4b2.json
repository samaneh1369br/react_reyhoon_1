{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\s.hajiramezani\\\\Documents\\\\samaneh-practice\\\\react_reyhoon_page_2\\\\components\\\\Banner_form\\\\Banner_form.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { createFilter } from 'react-search-input';\nimport cx from 'classnames';\nimport \"./Banner_form.css\";\nimport SvgSearch from \"../Svg_search/Svg_search\";\nimport ReactDOM from \"react-dom\";\n\nvar Form =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Form, _React$Component);\n\n  function Form(props) {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Form).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"getCities\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var respond, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('https://stage.reyhoon.com/public-api/v1/cities', {\n                method: \"GET\"\n              });\n\n            case 2:\n              respond = _context.sent;\n\n              if (!respond.ok) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 6;\n              return respond.json();\n\n            case 6:\n              data = _context.sent;\n\n              _this.setState({\n                allCityies: data.cities\n              });\n\n              _context.next = 11;\n              break;\n\n            case 10:\n              console.error(\"https_code\" + respond.status);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"regionGet\", function (e) {\n      console.log(e.target); //     const regionTyped=e.target.value;\n      //     if (regionTyped.length>=4)\n      //    {\n      //        setTimeout(() => {\n      //             this.setState(\n      //                 {\n      //                     region:regionTyped\n      //                 }\n      //                 ,async()=>{\n      //                     const respond= await fetch(`https://stage.reyhoon.com/location/query?query=${this.state.region}&city=${this.state.city}`)\n      //                     if (respond.ok){\n      //                         const data= await respond.json();\n      //                         console.log(data)\n      //                         if (data.suggestions.length>0){\n      //                                 this.setState(\n      //                                     {\n      //                                         allRegion:data.suggestions,\n      //                                         showSuggestRegion:true\n      //                                     }\n      //                                 )\n      //                         }\n      //                     }\n      //                     else{\n      //                         console.error(\"https_code\"+respond.status)\n      //                     }\n      //                 }\n      //             )\n      //         }, 2000);\n      //     }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submit\", function (e) {\n      e.preventDefault();\n      var node = ReactDOM.findDOMNode(_assertThisInitialized(_this));\n      var text1Value = e.target.querySelector(\"input[id='txt1']\").value;\n      var text2Value = e.target.querySelector(\"input[id='txt2']\").value;\n\n      if (text1Value && text2Value) {\n        node.querySelector(\"div[id='nullInput']\").textContent = \"\".concat(_this.state.city, \" . \").concat(_this.state.region);\n      } else {\n        var _node = ReactDOM.findDOMNode(_assertThisInitialized(_this));\n\n        _node.querySelector(\"div[id='nullInput']\").textContent = \"لطفا ورودی را وارد کنید\";\n        console.log(\"hi\");\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"searchUpdated\", function (term) {\n      var temp = term.target.value;\n\n      if (temp.length >= 2) {\n        _this.setState({\n          searchTerm: temp\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"citySuggestedShow\", function () {\n      _this.setState({\n        showSuggestCity: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"regionSuggestedShow\", function () {\n      if (_this.state.showSuggestRegion) _this.setState({\n        showSuggestRegion: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setCity\", function (citySelected) {\n      var node = ReactDOM.findDOMNode(_assertThisInitialized(_this));\n      node.querySelector(\"input[id='txt2']\").focus();\n\n      _this.setState({\n        city: citySelected,\n        showSuggestCity: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setRegion\", function (regionSelected) {\n      _this.setState({\n        region: regionSelected,\n        showSuggestRegion: false\n      });\n    });\n\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this)); // this.cityGet=this.cityGet.bind(this);\n\n    _this.searchUpdated = _this.searchUpdated.bind(_assertThisInitialized(_this));\n    _this.suggestedCittyBlock = React.createRef();\n    _this.state = {\n      city: \"\",\n      region: \"\",\n      allCityies: [],\n      searchTerm: '',\n      sugestionCity: '',\n      showSuggestCity: false,\n      showSuggestRegion: false,\n      allRegion: []\n    };\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.getCities();\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state.showSuggestRegion);\n      var filteredCities = this.state.allCityies.filter(createFilter(this.state.searchTerm, 'name'));\n      return __jsx(\"section\", {\n        style: {\n          marginBottom: '30px',\n          marginTop: \"45px !important\"\n        },\n        className: \"header-form-section margin-v-60\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"\\u0628\\u0631\\u0627\\u06CC \\u062F\\u06CC\\u062F\\u0646 \\u0644\\u06CC\\u0633\\u062A \\u0631\\u0633\\u062A\\u0648\\u0631\\u0627\\u0646\\u200C\\u0647\\u0627 \\u0648 \\u0641\\u0633\\u062A\\u200C\\u0641\\u0648\\u062F\\u200C\\u0647\\u0627\\u06CC\\u06CC \\u06A9\\u0647 \\u0628\\u0647 \\u0634\\u0645\\u0627 \\u0633\\u0631\\u0648\\u06CC\\u0633 \\u0645\\u06CC\\u200C\\u062F\\u0647\\u0646\\u062F\\u060C \\u0645\\u0646\\u0637\\u0642\\u0647 \\u062E\\u0648\\u062F \\u0631\\u0627 \\u0648\\u0627\\u0631\\u062F \\u06A9\\u0646\\u06CC\\u062F.\"), __jsx(\"form\", {\n        onSubmit: this.submit,\n        className: \"header-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        id: \"txt1\",\n        value: this.state.city,\n        type: \"text\",\n        onFocus: function onFocus() {\n          return _this2.citySuggestedShow();\n        },\n        onChange: function onChange(e) {\n          return _this2.searchUpdated(e);\n        },\n        placeholder: \"\\u0627\\u0646\\u062A\\u062E\\u0627\\u0628 \\u06A9\\u0646\\u06CC\\u062F\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), __jsx(\"ul\", {\n        className: cx('citySuggested', {\n          'showCitySuggested': this.state.showSuggestCity\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"( \", this.state.allCityies.length, \") \\u062A\\u062D\\u062A \\u067E\\u0648\\u0634\\u0634\"), filteredCities.map(function (city, key) {\n        return __jsx(\"li\", {\n          onClick: function onClick() {\n            return _this2.setCity(city.name);\n          },\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, city.name);\n      })), __jsx(\"div\", {\n        className: \"child-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"child-2-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"\\xA9\"), __jsx(\"input\", {\n        className: \"child-2-input\",\n        autoComplete: \"off\",\n        type: \"text\",\n        id: \"txt2\",\n        onChange: function onChange() {\n          _this2.regionGet();\n\n          _this2.regionSuggestedShow();\n        },\n        placeholder: \"\\u0645\\u062B\\u0644\\u0627 \\u0646\\u06CC\\u0627\\u0648\\u0631\\u0627\\u0646\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      })), __jsx(\"ul\", {\n        className: cx('regionSuggested', {\n          'showRegionSuggested': this.state.showSuggestRegion\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, this.state.allRegion.map(function (regionSuggested, key) {\n        return __jsx(\"li\", {\n          key: key,\n          onClick: function onClick() {\n            return _this2.setRegion(regionSuggested.value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, regionSuggested.value);\n      })), __jsx(\"button\", {\n        className: \"child-3\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, __jsx(SvgSearch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        id: \"nullInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Form;\n}(React.Component);\n\nexport default Form;","map":{"version":3,"sources":["C:\\Users\\s.hajiramezani\\Documents\\samaneh-practice\\react_reyhoon_page_2\\components\\Banner_form\\Banner_form.js"],"names":["createFilter","cx","SvgSearch","ReactDOM","Form","props","fetch","method","respond","ok","json","data","setState","allCityies","cities","console","error","status","e","log","target","preventDefault","node","findDOMNode","text1Value","querySelector","value","text2Value","textContent","state","city","region","term","temp","length","searchTerm","showSuggestCity","showSuggestRegion","citySelected","focus","regionSelected","submit","bind","searchUpdated","suggestedCittyBlock","React","createRef","sugestionCity","allRegion","getCities","filteredCities","filter","marginBottom","marginTop","citySuggestedShow","map","key","setCity","name","regionGet","regionSuggestedShow","regionSuggested","setRegion","Component"],"mappings":"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","sourcesContent":["\r\nimport {createFilter} from 'react-search-input';\r\nimport cx from 'classnames';\r\nimport \"./Banner_form.css\"\r\nimport SvgSearch from \"../Svg_search/Svg_search\"\r\nimport ReactDOM from \"react-dom\";\r\n\r\nclass Form  extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.submit=this.submit.bind(this);\r\n        // this.cityGet=this.cityGet.bind(this);\r\n        this.searchUpdated = this.searchUpdated.bind(this);\r\n        this.suggestedCittyBlock=React.createRef();\r\n        this.state={\r\n            city:\"\",\r\n            region:\"\",\r\n            allCityies:[],\r\n            searchTerm :'',\r\n            sugestionCity:'',\r\n            showSuggestCity: false,\r\n            showSuggestRegion: false,\r\n            allRegion:[]\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n      this.getCities();\r\n    }\r\n   \r\n\r\n    getCities = async () => {\r\n        const respond =  await fetch('https://stage.reyhoon.com/public-api/v1/cities',{method:\"GET\"});\r\n        if (respond.ok) {\r\n            const data = await respond.json();\r\n            this.setState(\r\n                {\r\n                    allCityies:data.cities\r\n                }\r\n            )\r\n        }\r\n        else {\r\n            console.error(\"https_code\"+respond.status)\r\n        }\r\n       \r\n            \r\n    }\r\n\r\n    regionGet=(e)=>{\r\n        console.log(e.target)\r\n    //     const regionTyped=e.target.value;\r\n    //     if (regionTyped.length>=4)\r\n    //    {\r\n    //        setTimeout(() => {\r\n    //             this.setState(\r\n    //                 {\r\n    //                     region:regionTyped\r\n    //                 }\r\n    //                 ,async()=>{\r\n    //                     const respond= await fetch(`https://stage.reyhoon.com/location/query?query=${this.state.region}&city=${this.state.city}`)\r\n    //                     if (respond.ok){\r\n    //                         const data= await respond.json();\r\n    //                         console.log(data)\r\n    //                         if (data.suggestions.length>0){\r\n    //                                 this.setState(\r\n    //                                     {\r\n    //                                         allRegion:data.suggestions,\r\n    //                                         showSuggestRegion:true\r\n    //                                     }\r\n    //                                 )\r\n    //                         }\r\n    //                     }\r\n    //                     else{\r\n    //                         console.error(\"https_code\"+respond.status)\r\n    \r\n    //                     }\r\n    //                 }\r\n    //             )\r\n    //         }, 2000);\r\n    //     }\r\n    }\r\n\r\n    submit=(e)=>{\r\n        e.preventDefault(); \r\n        const node = ReactDOM.findDOMNode(this);\r\n        const text1Value=e.target.querySelector(\"input[id='txt1']\").value;\r\n        const text2Value=e.target.querySelector(\"input[id='txt2']\").value;\r\n        if(text1Value&&text2Value)\r\n        {\r\n            node.querySelector(\"div[id='nullInput']\").textContent= `${this.state.city} . ${ this.state.region}`;\r\n        }\r\n        else{\r\n            const node = ReactDOM.findDOMNode(this);\r\n               node.querySelector(\"div[id='nullInput']\").textContent=\"لطفا ورودی را وارد کنید\";\r\n               console.log(\"hi\")\r\n        }\r\n    }\r\n\r\n    searchUpdated=(term)=>{\r\n        let temp=term.target.value;\r\n        if (temp.length>=2){\r\n          this.setState({searchTerm:temp});        \r\n        }\r\n    }\r\n\r\n    citySuggestedShow=()=>{\r\n        this.setState(\r\n            {\r\n                showSuggestCity: true,\r\n            }\r\n        )\r\n    }\r\n    regionSuggestedShow=()=>{\r\n        if (this.state.showSuggestRegion)\r\n        this.setState(\r\n            {\r\n               showSuggestRegion: true,\r\n            }\r\n        )\r\n    }\r\n\r\n    setCity=(citySelected)=>{\r\n        const node = ReactDOM.findDOMNode(this);\r\n        node.querySelector(\"input[id='txt2']\").focus();\r\n        this.setState(\r\n            {\r\n                city:citySelected,\r\n                showSuggestCity: false\r\n            }\r\n        )\r\n    }  \r\n\r\n    setRegion=(regionSelected)=>{\r\n        this.setState(\r\n            {\r\n                region:regionSelected,\r\n                showSuggestRegion: false\r\n            }\r\n        )\r\n    }\r\n\r\n    render(){\r\n      console.log(this.state.showSuggestRegion)\r\n          const filteredCities =this.state.allCityies.filter(createFilter(this.state.searchTerm,'name'));\r\n        return(   \r\n            <section\r\n                style={{marginBottom: '30px', marginTop:\"45px !important\"}}\r\n                className=\"header-form-section margin-v-60\"\r\n            >\r\n                <p>برای دیدن لیست رستوران‌ها و فست‌فود‌هایی که به شما سرویس می‌دهند، منطقه خود را وارد کنید.</p>\r\n                <form onSubmit={this.submit} className=\"header-form\">\r\n                    <input  \r\n                        id=\"txt1\"\r\n                        value={this.state.city}\r\n                        type=\"text\" \r\n                        onFocus={()=>this.citySuggestedShow()}  \r\n                        onChange={(e)=>this.searchUpdated(e)} \r\n                        placeholder=\"انتخاب کنید\"\r\n                        autoComplete=\"off\" \r\n                    />  \r\n                    <ul\r\n                        className={cx('citySuggested', {'showCitySuggested': this.state.showSuggestCity})}\r\n                    >\r\n                        <p>( {this.state.allCityies.length}) تحت پوشش</p>\r\n                        {\r\n                            filteredCities.map(\r\n                               (city, key)=>\r\n                                    <li\r\n                                        onClick={()=>this.setCity(city.name)}\r\n                                        key={key}>{city.name}\r\n                                    </li>\r\n                            )\r\n                        }\r\n                    </ul>  \r\n                    <div className=\"child-2\">\r\n                        <span className=\"child-2-icon\">&copy;</span>\r\n                        <input\r\n                            className=\"child-2-input\"\r\n                            autoComplete=\"off\"\r\n                            type=\"text\"\r\n                            id=\"txt2\"\r\n                            onChange={()=>{this.regionGet() ; this.regionSuggestedShow();}}\r\n                            placeholder=\"مثلا نیاوران\"\r\n                        />\r\n                    </div>\r\n                    <ul \r\n                        className={cx('regionSuggested', {'showRegionSuggested': this.state.showSuggestRegion})}\r\n                    >\r\n                        {   \r\n                           this.state.allRegion.map((regionSuggested, key)=><li key={key}  onClick={()=>this.setRegion(regionSuggested.value)}>{regionSuggested.value}</li>)\r\n                        }\r\n                    </ul>\r\n                    <button className=\"child-3\" type=\"submit\">\r\n                        <SvgSearch/>\r\n                    </button>\r\n                    \r\n                </form>\r\n                <div id=\"nullInput\"></div>\r\n\r\n            </section>\r\n           \r\n        )\r\n    }\r\n}\r\nexport default Form;\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}