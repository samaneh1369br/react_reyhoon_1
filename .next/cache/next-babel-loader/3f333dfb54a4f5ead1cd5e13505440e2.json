{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\s.hajiramezani\\\\Documents\\\\samaneh-practice\\\\react_reyhoon_page_2\\\\components\\\\Banner_form\\\\Banner_form.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { createFilter } from 'react-search-input';\nimport cx from 'classnames';\nimport \"./Banner_form.css\";\nimport SvgSearch from \"../Svg_search/Svg_search\";\nimport ReactDOM from \"react-dom\";\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getCities\", async () => {\n      const respond = await fetch('https://stage.reyhoon.com/public-api/v1/cities', {\n        method: \"GET\"\n      });\n\n      if (respond.ok) {\n        const data = await respond.json();\n        this.setState({\n          allCityies: data.cities\n        });\n      } else {\n        console.error(\"https_code\" + respond.status);\n      }\n    });\n\n    _defineProperty(this, \"regionGet\", e => {\n      const regionTyped = e.target.value;\n\n      if (regionTyped.length >= 4) {\n        setTimeout(() => {\n          this.setState({\n            region: regionTyped\n          }, async () => {\n            const respond = await fetch(`https://stage.reyhoon.com/location/query?query=${this.state.region}&city=${this.state.city}`);\n\n            if (respond.ok) {\n              const data = await respond.json();\n              console.log(data);\n\n              if (data.suggestions.length > 0) {\n                this.setState({\n                  allRegion: data.suggestions,\n                  showSuggestRegion: true\n                });\n              }\n            } else {\n              console.error(\"https_code\" + respond.status);\n            }\n          });\n        }, 2000);\n      }\n    });\n\n    _defineProperty(this, \"submit\", e => {\n      e.preventDefault();\n      const node = ReactDOM.findDOMNode(this);\n      const text1Value = e.target.querySelector(\"input[id='txt1']\").value;\n      const text2Value = e.target.querySelector(\"input[id='txt2']\").value;\n\n      if (text1Value && text2Value) {\n        node.querySelector(\"div[id='nullInput']\").textContent = `${this.state.city} . ${this.state.region}`;\n      } else {\n        const node = ReactDOM.findDOMNode(this);\n        node.querySelector(\"div[id='nullInput']\").textContent = \"لطفا ورودی را وارد کنید\";\n        console.log(\"hi\");\n      }\n    });\n\n    _defineProperty(this, \"searchUpdated\", term => {\n      let temp = term.target.value;\n\n      if (temp.length >= 2) {\n        this.setState({\n          searchTerm: temp\n        });\n      }\n    });\n\n    _defineProperty(this, \"citySuggestedShow\", () => {\n      this.setState({\n        showSuggestCity: true\n      });\n    });\n\n    _defineProperty(this, \"regionSuggestedShow\", () => {\n      if (this.state.showSuggestRegion) this.setState({\n        showSuggestRegion: true\n      });\n    });\n\n    _defineProperty(this, \"setCity\", citySelected => {\n      const node = ReactDOM.findDOMNode(this);\n      node.querySelector(\"input[id='txt2']\").focus();\n      this.setState({\n        city: citySelected,\n        showSuggestCity: false\n      });\n    });\n\n    _defineProperty(this, \"setRegion\", regionSelected => {\n      this.setState({\n        region: regionSelected,\n        showSuggestRegion: false\n      });\n    });\n\n    this.submit = this.submit.bind(this); // this.cityGet=this.cityGet.bind(this);\n\n    this.searchUpdated = this.searchUpdated.bind(this);\n    this.suggestedCittyBlock = React.createRef();\n    this.state = {\n      city: \"\",\n      region: \"\",\n      allCityies: [],\n      searchTerm: '',\n      sugestionCity: '',\n      showSuggestCity: false,\n      showSuggestRegion: false,\n      allRegion: []\n    };\n  }\n\n  async componentDidMount() {\n    this.getCities();\n  }\n\n  render() {\n    console.log(this.state.showSuggestRegion);\n    const filteredCities = this.state.allCityies.filter(createFilter(this.state.searchTerm, 'name'));\n    return __jsx(\"section\", {\n      style: {\n        marginBottom: '30px',\n        marginTop: \"45px !important\"\n      },\n      className: \"header-form-section margin-v-60\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"\\u0628\\u0631\\u0627\\u06CC \\u062F\\u06CC\\u062F\\u0646 \\u0644\\u06CC\\u0633\\u062A \\u0631\\u0633\\u062A\\u0648\\u0631\\u0627\\u0646\\u200C\\u0647\\u0627 \\u0648 \\u0641\\u0633\\u062A\\u200C\\u0641\\u0648\\u062F\\u200C\\u0647\\u0627\\u06CC\\u06CC \\u06A9\\u0647 \\u0628\\u0647 \\u0634\\u0645\\u0627 \\u0633\\u0631\\u0648\\u06CC\\u0633 \\u0645\\u06CC\\u200C\\u062F\\u0647\\u0646\\u062F\\u060C \\u0645\\u0646\\u0637\\u0642\\u0647 \\u062E\\u0648\\u062F \\u0631\\u0627 \\u0648\\u0627\\u0631\\u062F \\u06A9\\u0646\\u06CC\\u062F.\"), __jsx(\"form\", {\n      onSubmit: this.submit,\n      className: \"header-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      id: \"txt1\",\n      value: this.state.city,\n      type: \"text\",\n      onFocus: () => this.citySuggestedShow(),\n      onChange: e => this.searchUpdated(e),\n      placeholder: \"\\u0627\\u0646\\u062A\\u062E\\u0627\\u0628 \\u06A9\\u0646\\u06CC\\u062F\",\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), __jsx(\"ul\", {\n      className: cx('citySuggested', {\n        'showCitySuggested': this.state.showSuggestCity\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"( \", this.state.allCityies.length, \") \\u062A\\u062D\\u062A \\u067E\\u0648\\u0634\\u0634\"), filteredCities.map((city, key) => __jsx(\"li\", {\n      onClick: () => this.setCity(city.name),\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, city.name))), __jsx(\"div\", {\n      className: \"child-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"child-2-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"\\xA9\"), __jsx(\"input\", {\n      className: \"child-2-input\",\n      autoComplete: \"off\",\n      type: \"text\",\n      id: \"txt2\",\n      onChange: () => {\n        this.regionGet;\n        this.regionSuggestedShow();\n      },\n      placeholder: \"\\u0645\\u062B\\u0644\\u0627 \\u0646\\u06CC\\u0627\\u0648\\u0631\\u0627\\u0646\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })), __jsx(\"ul\", {\n      className: cx('regionSuggested', {\n        'showRegionSuggested': this.state.showSuggestRegion\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, this.state.allRegion.map((regionSuggested, key) => __jsx(\"li\", {\n      key: key,\n      onClick: () => this.setRegion(regionSuggested.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, regionSuggested.value))), __jsx(\"button\", {\n      className: \"child-3\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, __jsx(SvgSearch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      id: \"nullInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["C:\\Users\\s.hajiramezani\\Documents\\samaneh-practice\\react_reyhoon_page_2\\components\\Banner_form\\Banner_form.js"],"names":["createFilter","cx","SvgSearch","ReactDOM","Form","React","Component","constructor","props","respond","fetch","method","ok","data","json","setState","allCityies","cities","console","error","status","e","regionTyped","target","value","length","setTimeout","region","state","city","log","suggestions","allRegion","showSuggestRegion","preventDefault","node","findDOMNode","text1Value","querySelector","text2Value","textContent","term","temp","searchTerm","showSuggestCity","citySelected","focus","regionSelected","submit","bind","searchUpdated","suggestedCittyBlock","createRef","sugestionCity","componentDidMount","getCities","render","filteredCities","filter","marginBottom","marginTop","citySuggestedShow","map","key","setCity","name","regionGet","regionSuggestedShow","regionSuggested","setRegion"],"mappings":"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","sourcesContent":["\r\nimport {createFilter} from 'react-search-input';\r\nimport cx from 'classnames';\r\nimport \"./Banner_form.css\"\r\nimport SvgSearch from \"../Svg_search/Svg_search\"\r\nimport ReactDOM from \"react-dom\";\r\n\r\nclass Form  extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.submit=this.submit.bind(this);\r\n        // this.cityGet=this.cityGet.bind(this);\r\n        this.searchUpdated = this.searchUpdated.bind(this);\r\n        this.suggestedCittyBlock=React.createRef();\r\n        this.state={\r\n            city:\"\",\r\n            region:\"\",\r\n            allCityies:[],\r\n            searchTerm :'',\r\n            sugestionCity:'',\r\n            showSuggestCity: false,\r\n            showSuggestRegion: false,\r\n            allRegion:[]\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n      this.getCities();\r\n    }\r\n   \r\n\r\n    getCities = async () => {\r\n        const respond =  await fetch('https://stage.reyhoon.com/public-api/v1/cities',{method:\"GET\"});\r\n        if (respond.ok) {\r\n            const data = await respond.json();\r\n            this.setState(\r\n                {\r\n                    allCityies:data.cities\r\n                }\r\n            )\r\n        }\r\n        else {\r\n            console.error(\"https_code\"+respond.status)\r\n        }\r\n       \r\n            \r\n    }\r\n\r\n    regionGet=(e)=>{\r\n        const regionTyped=e.target.value;\r\n        if (regionTyped.length>=4)\r\n       {\r\n           setTimeout(() => {\r\n                this.setState(\r\n                    {\r\n                        region:regionTyped\r\n                    }\r\n                    ,async()=>{\r\n                        \r\n                        const respond= await fetch(`https://stage.reyhoon.com/location/query?query=${this.state.region}&city=${this.state.city}`)\r\n                        if (respond.ok){\r\n                            const data= await respond.json();\r\n                            console.log(data)\r\n                            if (data.suggestions.length>0){\r\n                                    this.setState(\r\n                                        {\r\n                                            allRegion:data.suggestions,\r\n                                            showSuggestRegion:true\r\n                                        }\r\n                                    )\r\n                            }\r\n                        }\r\n                        else{\r\n                            console.error(\"https_code\"+respond.status)\r\n    \r\n                        }\r\n                    }\r\n                )\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    submit=(e)=>{\r\n        e.preventDefault(); \r\n        const node = ReactDOM.findDOMNode(this);\r\n        const text1Value=e.target.querySelector(\"input[id='txt1']\").value;\r\n        const text2Value=e.target.querySelector(\"input[id='txt2']\").value;\r\n        if(text1Value&&text2Value)\r\n        {\r\n            node.querySelector(\"div[id='nullInput']\").textContent= `${this.state.city} . ${ this.state.region}`;\r\n        }\r\n        else{\r\n            const node = ReactDOM.findDOMNode(this);\r\n               node.querySelector(\"div[id='nullInput']\").textContent=\"لطفا ورودی را وارد کنید\";\r\n               console.log(\"hi\")\r\n        }\r\n    }\r\n\r\n    searchUpdated=(term)=>{\r\n        let temp=term.target.value;\r\n        if (temp.length>=2){\r\n          this.setState({searchTerm:temp});        \r\n        }\r\n    }\r\n\r\n    citySuggestedShow=()=>{\r\n        this.setState(\r\n            {\r\n                showSuggestCity: true,\r\n            }\r\n        )\r\n    }\r\n    regionSuggestedShow=()=>{\r\n        if (this.state.showSuggestRegion)\r\n        this.setState(\r\n            {\r\n               showSuggestRegion: true,\r\n            }\r\n        )\r\n    }\r\n\r\n    setCity=(citySelected)=>{\r\n        const node = ReactDOM.findDOMNode(this);\r\n        node.querySelector(\"input[id='txt2']\").focus();\r\n        this.setState(\r\n            {\r\n                city:citySelected,\r\n                showSuggestCity: false\r\n            }\r\n        )\r\n    }  \r\n\r\n    setRegion=(regionSelected)=>{\r\n        this.setState(\r\n            {\r\n                region:regionSelected,\r\n                showSuggestRegion: false\r\n            }\r\n        )\r\n    }\r\n\r\n    render(){\r\n      console.log(this.state.showSuggestRegion)\r\n          const filteredCities =this.state.allCityies.filter(createFilter(this.state.searchTerm,'name'));\r\n        return(   \r\n            <section\r\n                style={{marginBottom: '30px', marginTop:\"45px !important\"}}\r\n                className=\"header-form-section margin-v-60\"\r\n            >\r\n                <p>برای دیدن لیست رستوران‌ها و فست‌فود‌هایی که به شما سرویس می‌دهند، منطقه خود را وارد کنید.</p>\r\n                <form onSubmit={this.submit} className=\"header-form\">\r\n                    <input  \r\n                        id=\"txt1\"\r\n                        value={this.state.city}\r\n                        type=\"text\" \r\n                        onFocus={()=>this.citySuggestedShow()}  \r\n                        onChange={(e)=>this.searchUpdated(e)} \r\n                        placeholder=\"انتخاب کنید\"\r\n                        autoComplete=\"off\" \r\n                    />  \r\n                    <ul\r\n                        className={cx('citySuggested', {'showCitySuggested': this.state.showSuggestCity})}\r\n                    >\r\n                        <p>( {this.state.allCityies.length}) تحت پوشش</p>\r\n                        {\r\n                            filteredCities.map(\r\n                               (city, key)=>\r\n                                    <li\r\n                                        onClick={()=>this.setCity(city.name)}\r\n                                        key={key}>{city.name}\r\n                                    </li>\r\n                            )\r\n                        }\r\n                    </ul>  \r\n                    <div className=\"child-2\">\r\n                        <span className=\"child-2-icon\">&copy;</span>\r\n                        <input\r\n                            className=\"child-2-input\"\r\n                            autoComplete=\"off\"\r\n                            type=\"text\"\r\n                            id=\"txt2\"\r\n                            onChange={()=>{this.regionGet ;this.regionSuggestedShow()}}\r\n                            placeholder=\"مثلا نیاوران\"\r\n                        />\r\n                    </div>\r\n                    <ul \r\n                        className={cx('regionSuggested', {'showRegionSuggested': this.state.showSuggestRegion})}\r\n                    >\r\n                        {   \r\n                           this.state.allRegion.map((regionSuggested, key)=><li key={key}  onClick={()=>this.setRegion(regionSuggested.value)}>{regionSuggested.value}</li>)\r\n                        }\r\n                    </ul>\r\n                    <button className=\"child-3\" type=\"submit\">\r\n                        <SvgSearch/>\r\n                    </button>\r\n                    \r\n                </form>\r\n                <div id=\"nullInput\"></div>\r\n\r\n            </section>\r\n           \r\n        )\r\n    }\r\n}\r\nexport default Form;\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}