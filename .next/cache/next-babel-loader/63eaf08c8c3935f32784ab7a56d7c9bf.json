{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\s.hajiramezani\\\\Documents\\\\samaneh-practice\\\\react_reyhoon_page_2\\\\components\\\\Banner_form\\\\Banner_form.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// onBlur={() => this.setState({ showSuggest: false })} \nimport SearchInput, { createFilter } from 'react-search-input';\nimport cx from 'classnames';\nimport \"./Banner_form.css\";\nimport SvgSearch from \"../Svg_search/Svg_search\";\nimport ReactDOM from \"react-dom\";\n\nvar Form =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Form, _React$Component);\n\n  function Form(props) {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Form).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"getCities\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var respond, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('https://stage.reyhoon.com/public-api/v1/cities', {\n                method: \"GET\"\n              });\n\n            case 2:\n              respond = _context.sent;\n\n              if (!respond.ok) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 6;\n              return respond.json();\n\n            case 6:\n              data = _context.sent;\n\n              _this.setState({\n                allCityies: data.cities\n              });\n\n              _context.next = 11;\n              break;\n\n            case 10:\n              console.error(\"https_code\" + respond.status);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"regionGet\", function (e) {\n      var regionTyped = e.target.value;\n      if (regionTyped.length >= 4) _this.setState({\n        region: regionTyped\n      },\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var respond, data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch(\"https://stage.reyhoon.com/location/query?query=\".concat(_this.state.region, \"&city=\").concat(_this.state.city));\n\n              case 2:\n                respond = _context2.sent;\n\n                if (!respond.ok) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                _context2.next = 6;\n                return respond.json();\n\n              case 6:\n                data = _context2.sent;\n\n                _this.setState({\n                  allRegion: data.suggestions,\n                  showSuggestRegion: true\n                });\n\n                _context2.next = 11;\n                break;\n\n              case 10:\n                console.error(\"https_code\" + respond.status);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      })));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submit\", function (e) {\n      e.preventDefault();\n      e.target.querySelector(\"input[id='txt1']\").value = _this.state.city;\n      e.target.querySelector(\"input[id='txt1']\").value && e.target.querySelector(\"input[id='txt2']\").value ? _this.setState({\n        region: e.target.querySelector(\"input[id='txt2']\").value\n      }) : _this.setState({\n        city: \"هر دو ورودی را کامل کنید\",\n        region: \"\"\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"searchUpdated\", function (term) {\n      var temp = term.target.value;\n      if (temp.length >= 2) _this.setState({\n        searchTerm: temp\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"citySuggestedShow\", function () {\n      _this.setState({\n        showSuggestCity: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"regionSuggestedShow\", function () {\n      _this.setState({\n        showSuggestRegion: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setCity\", function (citySelected) {\n      var node = ReactDOM.findDOMNode(_assertThisInitialized(_this)); //    document.querySelector(\"input[id='txt1']\").value=citySelected;\n\n      node.querySelector(\"input[id='txt2']\").focus();\n\n      _this.setState({\n        city: citySelected,\n        showSuggestCity: false\n      });\n    });\n\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this)); // this.cityGet=this.cityGet.bind(this);\n\n    _this.searchUpdated = _this.searchUpdated.bind(_assertThisInitialized(_this));\n    _this.suggestedCittyBlock = React.createRef();\n    _this.state = {\n      city: \"\",\n      region: \"\",\n      allCityies: [],\n      searchTerm: '',\n      sugestionCity: '',\n      showSuggestCity: false,\n      showSuggestRegion: false,\n      allRegion: []\n    };\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.getCities();\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this,\n          _jsx;\n\n      var filteredCities = this.state.allCityies.filter(createFilter(this.state.searchTerm, 'name')); //  console.log(filteredCities);\n\n      return __jsx(\"section\", {\n        style: {\n          marginBottom: '30px',\n          marginTop: \"45px !important\"\n        },\n        className: \"header-form-section margin-v-60\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"\\u0628\\u0631\\u0627\\u06CC \\u062F\\u06CC\\u062F\\u0646 \\u0644\\u06CC\\u0633\\u062A \\u0631\\u0633\\u062A\\u0648\\u0631\\u0627\\u0646\\u200C\\u0647\\u0627 \\u0648 \\u0641\\u0633\\u062A\\u200C\\u0641\\u0648\\u062F\\u200C\\u0647\\u0627\\u06CC\\u06CC \\u06A9\\u0647 \\u0628\\u0647 \\u0634\\u0645\\u0627 \\u0633\\u0631\\u0648\\u06CC\\u0633 \\u0645\\u06CC\\u200C\\u062F\\u0647\\u0646\\u062F\\u060C \\u0645\\u0646\\u0637\\u0642\\u0647 \\u062E\\u0648\\u062F \\u0631\\u0627 \\u0648\\u0627\\u0631\\u062F \\u06A9\\u0646\\u06CC\\u062F.\"), __jsx(\"form\", {\n        onSubmit: this.submit,\n        className: \"header-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        value: this.state.city,\n        id: \"txt1\",\n        type: \"text\",\n        onFocus: function onFocus() {\n          return _this2.citySuggestedShow();\n        },\n        onChange: function onChange(e) {\n          return _this2.searchUpdated(e);\n        },\n        placeholder: \"\\u0627\\u0646\\u062A\\u062E\\u0627\\u0628 \\u06A9\\u0646\\u06CC\\u062F\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), __jsx(\"ul\", {\n        className: cx('citySuggested', {\n          'showCitySuggested': this.state.showSuggestCity\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"( \", this.state.allCityies.length, \") \\u062A\\u062D\\u062A \\u067E\\u0648\\u0634\\u0634\"), filteredCities.map(function (city, key) {\n        return __jsx(\"li\", {\n          onClick: function onClick() {\n            return _this2.setCity(city.name);\n          },\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, city.name);\n      })), __jsx(\"div\", {\n        className: \"child-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"child-2-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"\\xA9\"), __jsx(\"input\", (_jsx = {\n        className: \"child-2-input\",\n        type: \"text\",\n        id: \"txt2\",\n        onChange: function onChange() {\n          return _this2.regionSuggestedShow();\n        }\n      }, _defineProperty(_jsx, \"onChange\", this.regionGet), _defineProperty(_jsx, \"placeholder\", \"\\u0645\\u062B\\u0644\\u0627 \\u0646\\u06CC\\u0627\\u0648\\u0631\\u0627\\u0646\"), _defineProperty(_jsx, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      }), _defineProperty(_jsx, \"__self\", this), _jsx))), __jsx(\"ul\", {\n        className: cx('regionSuggested', {\n          'showRegionSuggested': this.state.showSuggestRegion\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, this.state.allRegion.map(function (regionSuggested, key) {\n        return __jsx(\"li\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, regionSuggested.value);\n      })), __jsx(\"button\", {\n        className: \"child-3\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, __jsx(SvgSearch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, this.state.city, \" . \", this.state.region));\n    }\n  }]);\n\n  return Form;\n}(React.Component);\n\nexport default Form; // onBlur={() => this.setState({ showSuggest: false })}","map":{"version":3,"sources":["C:\\Users\\s.hajiramezani\\Documents\\samaneh-practice\\react_reyhoon_page_2\\components\\Banner_form\\Banner_form.js"],"names":["SearchInput","createFilter","cx","SvgSearch","ReactDOM","Form","props","fetch","method","respond","ok","json","data","setState","allCityies","cities","console","error","status","e","regionTyped","target","value","length","region","state","city","allRegion","suggestions","showSuggestRegion","preventDefault","querySelector","term","temp","searchTerm","showSuggestCity","citySelected","node","findDOMNode","focus","submit","bind","searchUpdated","suggestedCittyBlock","React","createRef","sugestionCity","getCities","filteredCities","filter","marginBottom","marginTop","citySuggestedShow","map","key","setCity","name","regionSuggestedShow","regionGet","regionSuggested","Component"],"mappings":"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","sourcesContent":["\r\n\r\n\r\n// onBlur={() => this.setState({ showSuggest: false })} \r\n\r\n\r\nimport SearchInput, {createFilter} from 'react-search-input';\r\nimport cx from 'classnames';\r\nimport \"./Banner_form.css\"\r\nimport SvgSearch from \"../Svg_search/Svg_search\"\r\nimport ReactDOM from \"react-dom\";\r\n\r\nclass Form  extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.submit=this.submit.bind(this);\r\n        // this.cityGet=this.cityGet.bind(this);\r\n        this.searchUpdated = this.searchUpdated.bind(this);\r\n        this.suggestedCittyBlock=React.createRef();\r\n        this.state={\r\n         city:\"\",\r\n         region:\"\",\r\n         allCityies:[],\r\n         searchTerm :'',\r\n         sugestionCity:'',\r\n         showSuggestCity: false,\r\n         showSuggestRegion: false,\r\n         allRegion:[]\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n      this.getCities();\r\n     \r\n    }\r\n   \r\n\r\n    getCities = async () => {\r\n        const respond =  await fetch('https://stage.reyhoon.com/public-api/v1/cities',{method:\"GET\"});\r\n        if (respond.ok) {\r\n            const data = await respond.json();\r\n            \r\n            this.setState({allCityies:data.cities})\r\n        }\r\n        else {\r\n            console.error(\"https_code\"+respond.status)\r\n        }\r\n       \r\n            \r\n    }\r\n\r\n    regionGet=(e)=>{\r\n        const regionTyped=e.target.value;\r\n        if (regionTyped.length>=4)\r\n         this.setState({\r\n            region:regionTyped\r\n        },async()=>{\r\n                \r\n                   const respond= await fetch(`https://stage.reyhoon.com/location/query?query=${this.state.region}&city=${this.state.city}`)\r\n                    if (respond.ok){\r\n                        const data= await respond.json();\r\n                        this.setState({allRegion:data.suggestions,\r\n                                       showSuggestRegion:true\r\n                                     }\r\n                                    )\r\n                       \r\n                   \r\n                    }\r\n                    else{\r\n                    console.error(\"https_code\"+respond.status)\r\n\r\n                    }\r\n               }\r\n        \r\n        )\r\n    }\r\n    submit=(e)=>{\r\n        e.preventDefault(); \r\n        e.target.querySelector(\"input[id='txt1']\").value=this.state.city;\r\n      ((e.target.querySelector(\"input[id='txt1']\").value)&&(e.target.querySelector(\"input[id='txt2']\").value))\r\n        ? this.setState({\r\n            \r\n            region:e.target.querySelector(\"input[id='txt2']\").value\r\n        })\r\n        : \r\n        this.setState({\r\n            city:\"هر دو ورودی را کامل کنید\",\r\n            region:\"\" \r\n        })\r\n    }\r\n    searchUpdated=(term)=>{\r\n        let temp=term.target.value;\r\n        if (temp.length>=2)\r\n        \r\n       this.setState({searchTerm:temp});        \r\n    };\r\n    citySuggestedShow=()=>{\r\n        this.setState({\r\n            showSuggestCity: true,\r\n        })\r\n        }\r\n    regionSuggestedShow=()=>{\r\n        this.setState({\r\n            showSuggestRegion: true,\r\n        })\r\n        }\r\n    setCity=(citySelected)=>{\r\n       const node = ReactDOM.findDOMNode(this);\r\n    //    document.querySelector(\"input[id='txt1']\").value=citySelected;\r\n       node.querySelector(\"input[id='txt2']\").focus();\r\n      this.setState({\r\n          city:citySelected,\r\n          showSuggestCity: false\r\n      })\r\n\r\n        }    \r\n    render(){\r\n      \r\n          const filteredCities =this.state.allCityies.filter(createFilter(this.state.searchTerm,'name'));\r\n        //  console.log(filteredCities);\r\n       return(   \r\n            <section  style={{marginBottom: '30px', marginTop:\"45px !important\"}} className=\"header-form-section margin-v-60\" >\r\n                    <p>برای دیدن لیست رستوران‌ها و فست‌فود‌هایی که به شما سرویس می‌دهند، منطقه خود را وارد کنید.</p>\r\n                    <form onSubmit={this.submit}  className=\"header-form\">\r\n                        <input  \r\n                        value={this.state.city}\r\n                            id=\"txt1\"\r\n                            type=\"text\" \r\n                            onFocus={()=>this.citySuggestedShow()}  \r\n                            onChange={(e)=>this.searchUpdated(e)} \r\n                            placeholder=\"انتخاب کنید\"\r\n                            autoComplete=\"off\" \r\n                        />\r\n                           \r\n                         \r\n                         <ul className={cx('citySuggested', {'showCitySuggested': this.state.showSuggestCity})}>\r\n                             <p>( {this.state.allCityies.length}) تحت پوشش</p>\r\n                              {filteredCities.map((city, key)=><li onClick={()=>this.setCity(city.name)}  key={key}>{city.name}</li>)}\r\n                         </ul>  \r\n                        <div className=\"child-2\">\r\n                            <span className=\"child-2-icon\">&copy;</span>\r\n                            <input className=\"child-2-input\" type=\"text\" id=\"txt2\"   onChange={()=>this.regionSuggestedShow()}  onChange={this.regionGet} placeholder=\"مثلا نیاوران\"/>\r\n                        </div>\r\n                        <ul className={cx('regionSuggested', {'showRegionSuggested': this.state.showSuggestRegion})} >\r\n                                {this.state.allRegion.map((regionSuggested, key)=><li key={key} >{regionSuggested.value}</li>)}\r\n                        </ul>\r\n                        <button className=\"child-3\" type=\"submit\">\r\n                            <SvgSearch/>\r\n                        </button>\r\n                        \r\n                    </form>\r\n                    <div >\r\n                        {this.state.city} . { this.state.region}\r\n                    </div>\r\n\r\n                </section>\r\n           \r\n        )\r\n    }\r\n}\r\nexport default Form;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// onBlur={() => this.setState({ showSuggest: false })} \r\n"]},"metadata":{},"sourceType":"module"}